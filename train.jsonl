{"messages": [{"role": "system", "content": "You are a code agent that help user write java code and typescript code with CoreNG/CoreFE framework."}, {"role": "user", "content": "In the CoreNG framework, how is an interface defined by CoreAPI?"}, {"role": "assistant", "content": "Example: \napi class example:\n```java\npackage app.kos.service.api;\n\nimport core.framework.api.http.HTTPStatus;\nimport core.framework.api.web.service.DELETE;\nimport core.framework.api.web.service.GET;\nimport core.framework.api.web.service.POST;\nimport core.framework.api.web.service.PUT;\nimport core.framework.api.web.service.Path;\nimport core.framework.api.web.service.PathParam;\nimport core.framework.api.web.service.ResponseStatus;\n\n/**  \n* @author stephen  \n*/ \npublic interface RunnerScannerWebService {\n    @POST\n    @ResponseStatus(HTTPStatus.CREATED)\n    @Path(\"/runner-scanner/hdr/:hdrId/scanner\")\n    void create(@PathParam(\"hdrId\") String hdrId, CreateScannerRequest request);\n    \n    @DELETE\n    @Path(\"/runner-scanner/scanner/:id\")\n    void delete(@PathParam(\"id\") String id);\n    \n    @PUT\n    @Path(\"/runner-scanner/scanner/:id\")\n    void update(@PathParam(\"id\") String id, UpdateScannerRequest request);\n\n    @GET\n    @Path(\"/runner-scanner/hdr/:hdrId/scanner\")\n    ListScannerResponse list(@PathParam(\"hdrId\") String hdrId);\n} \n```\nrequest class example: \n```java \npackage app.kos.service.api.runnerscanner;\n\nimport core.framework.api.json.Property;\nimport core.framework.api.validate.NotBlank;\nimport core.framework.api.validate.NotNull;\n\n/**  \n* @author stephen  \n*/ \npublic class UpdateScannerRequest {\n    @NotNull\n    @NotBlank\n    @Property(name = \"name\")\n    public String name;\n\n    @NotNull\n    @Property(name = \"connected\")\n    public Boolean connected;\n\n    @NotNull\n    @Property(name = \"battery_capacity\")\n    public Double batteryCapacity;\n} \n``` \nresponse class example: \n```java \npackage app.kos.service.api.runnerscanner;\n\nimport core.framework.api.json.Property;\nimport core.framework.api.validate.NotNull;\nimport java.util.List;\n\n/**  \n* @author stephen  \n*/ \npublic class ListScannerResponse {\n    @NotNull\n    @Property(name = \"scanners\")\n    public List<ScannerView> scanners = List.of();\n} \n``` \nview class example: \n```java \npackage app.kos.service.api.runnerscanner;\n\nimport core.framework.api.json.Property;\nimport core.framework.api.validate.NotBlank;\nimport core.framework.api.validate.NotNull;\n\n/**  \n* @author stephen  \n*/ \npublic class ScannerView { \n    @NotBlank\n    @Property(name = \"id\")\n    public String id;\n       \n    @NotNull\n    @Property(name = \"connected\")\n    public Boolean connected;\n \n    @NotNull\n    @NotBlank\n    @Property(name = \"name\")\n    public String name;\n     \n    @Property(name = \"battery_capacity\")\n    public Double batteryCapacity;\n} \n```\n"}]}
{"messages": [{"role": "system", "content": "You are a code agent that help user write java code and typescript code with CoreNG/CoreFE framework."}, {"role": "user", "content": "What annotations are available in CoreAPI?"}, {"role": "assistant", "content": "Here is the core-ng-api package meta-inf\n```\nmodule core.framework.api {\n    exports core.framework.api.web.service;\n    exports core.framework.api.http;\n    exports core.framework.api.json;\n    exports core.framework.api.validate;\n}\n```\nevery package as below\npackage core.framework.api.http\n```java\npackage core.framework.api.http;\n\n/**\n * @author neo\n */\npublic enum HTTPStatus {\n    OK(200),\n    CREATED(201),\n    ACCEPTED(202),\n    NO_CONTENT(204),\n    MOVED_PERMANENTLY(301),\n    FOUND(302),     // 302 Moved Temporarily, sometimes Found\n    SEE_OTHER(303),\n    NOT_MODIFIED(304),\n    TEMPORARY_REDIRECT(307),\n    PERMANENT_REDIRECT(308),\n    BAD_REQUEST(400),\n    UNAUTHORIZED(401),\n    FORBIDDEN(403),\n    NOT_FOUND(404),\n    METHOD_NOT_ALLOWED(405),\n    NOT_ACCEPTABLE(406),\n    CONFLICT(409),\n    GONE(410),\n    PRECONDITION_FAILED(412),\n    UNPROCESSABLE_ENTITY(422),\n    UPGRADE_REQUIRED(426),\n    TOO_MANY_REQUESTS(429),\n    INTERNAL_SERVER_ERROR(500),\n    BAD_GATEWAY(502),\n    SERVICE_UNAVAILABLE(503),\n    GATEWAY_TIMEOUT(504);\n\n    public final int code;\n\n    HTTPStatus(int code) {\n        this.code = code;\n    }\n}\n```\npackage core.framework.api.json\n```java\npackage core.framework.api.json;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface Property {\n    String name();\n}\n```\npackage core.framework.api.validate\nDigits\n```java\npackage core.framework.api.validate;\n\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * Digits can be used on numeric fields.\n *\n * @author chris\n */\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface Digits {\n    int integer() default -1; // maximum number of integral digits accepted for this number\n\n    int fraction() default -1; // maximum number of fractional digits accepted for this number\n\n    String message() default \"field out of bounds (<{integer} digits>.<{fraction} digits> expected), value={value}\";\n}\n```\nMax\n```java\npackage core.framework.api.validate;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * Min can be used on numeric fields.\n *\n * @author neo\n */\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface Max {\n    double value();\n\n    String message() default \"field must not be greater than {max}, value={value}\";\n}\n```\nMin\n```java\npackage core.framework.api.validate;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * Min can be used on numeric fields.\n *\n * @author neo\n */\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface Min {\n    double value();\n\n    String message() default \"field must not be less than {min}, value={value}\";\n}\n```\nNotBlank\n```java\npackage core.framework.api.validate;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * used for String field, to check string is not blank, be aware of null is not treated as blank,\n * this is to validate if the value presents, it must not be blank string\n *\n * @author neo\n */\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface NotBlank {\n    String message() default \"field must not be blank\";\n}\n```\nNotNull\n```java\npackage core.framework.api.validate;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface NotNull {\n    String message() default \"field must not be null\";\n}\n```\nPattern\n```java\npackage core.framework.api.validate;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface Pattern {\n    String value();\n\n    String message() default \"field must match /{pattern}/, value={value}\";\n}\n```\nSize\n```java\npackage core.framework.api.validate;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * Size is used on String, List and Map.\n *\n * @author neo\n */\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface Size {\n    int min() default -1;\n\n    int max() default -1;\n\n    String message() default \"size must be between {min} and {max}, size={value}\";\n}\n```\npackage core.framework.api.web.service\nDELETE\n```java\npackage core.framework.api.web.service;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.METHOD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(METHOD)\n@Retention(RUNTIME)\npublic @interface DELETE {\n}\n```\nGET\n```java\npackage core.framework.api.web.service;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.METHOD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(METHOD)\n@Retention(RUNTIME)\npublic @interface GET {\n}\n```\nPATCH\n```java\npackage core.framework.api.web.service;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.METHOD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(METHOD)\n@Retention(RUNTIME)\npublic @interface PATCH {\n}\n```\nPath\n```java\npackage core.framework.api.web.service;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.METHOD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(METHOD)\n@Retention(RUNTIME)\npublic @interface Path {\n    String value();\n}\n```\nPathParam\n```java\npackage core.framework.api.web.service;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.PARAMETER;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(PARAMETER)\n@Retention(RUNTIME)\npublic @interface PathParam {\n    String value();\n}\n```\nPOST\n```java\npackage core.framework.api.web.service;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.METHOD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(METHOD)\n@Retention(RUNTIME)\npublic @interface POST {\n}\n```\nPUT\n```java\npackage core.framework.api.web.service;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.METHOD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(METHOD)\n@Retention(RUNTIME)\npublic @interface PUT {\n}\n```\nQueryParam\n```java\npackage core.framework.api.web.service;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.FIELD;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target(FIELD)\n@Retention(RUNTIME)\npublic @interface QueryParam {\n    String name();\n}\n```\nResponseStatus\n```java\npackage core.framework.api.web.service;\n\nimport core.framework.api.http.HTTPStatus;\n\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport static java.lang.annotation.ElementType.METHOD;\nimport static java.lang.annotation.ElementType.TYPE;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n * @author neo\n */\n@Target({TYPE, METHOD})\n@Retention(RUNTIME)\npublic @interface ResponseStatus {\n    HTTPStatus value() default HTTPStatus.OK;\n}\n```\n"}]}
